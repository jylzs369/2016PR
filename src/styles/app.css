/*entire*/
html, body {
    font-family: 'microsoft yahei';
    font-size: 20px;
    background: #000;
}
.swiper-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
.swiper-slide {
    display: flex;
    align-items: center;
    justify-content: center;
}
.color-white {
    color: white;
}
.color-black {
    color: black;
}
/*scenes*/
.scene1 {
    background: url(../images/bg-scene1.png), url(../images/bg-pattern.jpg);
    background-size: cover;
}
.scene1 .mark {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: all 2s linear;
    background: rgba(0, 0, 0, 1);
}
.scene1 .mark.lightin {
    background: rgba(0, 0, 0, .7);
}
.scene1 .typefont {
    font-size: 180%;
}
.scene2 {
    background: url(../images/bg-scene2.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene3 {
    background: url(../images/bg-scene3.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene4 {
    background: url(../images/bg-scene4.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene5 {
    background: url(../images/bg-scene5.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene6 {
    background: url(../images/bg-scene6.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene7 {
    background: url(../images/bg-scene7.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene8 {
    background: url(../images/bg-scene8.png), url(../images/bg-pattern.png) repeat 0 0;
}
.scene9 {
    background: url(../images/bg-scene9.png), url(../images/bg-pattern.png) repeat 0 0;
}

/*custom animate*/
@keyframes blink{
    0% { 
        opacity:1; 
    }
    50% { 
        opacity:0; 
    }
    100% { 
        opacity:1; 
    }
}
@keyframes rotateClockwise {
    to {
        transform: rotate(1turn);
    }
}
@keyframes rotateCounterclockwise {
    form {
        transform: rotate(1turn);
    }
}
@keyframes spinClockwise {
    from {
        transform: translate(50%, 100px) rotate(0turn) translate(-50%, -100px);
    }
    to {
        transform: translate(50%, 100px) rotate(1turn) translate(-50%, -100px);
    }
}
@keyframes spinCounterclockwise {
    from { 
        transform: translate(50%, 50%) rotate(1turn) translate(-50%, -50%);
    }
    to {
        transform: translate(50%, 50%) rotate(0turn) translate(-50%, -50%);
    }
}
/*define animate class*/
.slowest {
    animation-duration: 3s;
}
.slower {
    animation-duration: 2s;
}
.faster {
    animation-duration: .5s;
}
.fastest {
    animation-duration: .25s;
}
.rotate-clockwise {
    animation-name: rotateClockwise;
    animation-timing-function: linear;
}
.rotate-counterclockwise {
    animation-name: rotateCounterclockwise;
    animation-timing-function: linear;
}
.spin-clockwise {
    animation-name: spinClockwise;
    animation-timing-function: linear;
}
.spin-counterclockwise {
    animation-name: spinCounterclockwise;
    animation-timing-function: linear;
}
.typed-cursor{
    color: #fff;
    opacity: 1;
    animation: blink 0.7s infinite;
}